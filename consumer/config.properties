data.consumer.bootstrap.servers=localhost:9092
data.consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
data.consumer.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
data.consumer.kafka.topic=test
data.consumer.group.id=test_group
#data.consumer.retires=1
#data.consumer.max.block.ms=30000



# Auditor Properties
audit.producer.bootstrap.servers=localhost:9092
audit.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
audit.producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer
aduit.producer.kafka.topic=audit
audit.producer.acks=1
audit.producer.retires=1
audit.producer.max.block.ms=30000
# This parameter define the n floored minute based on that bucketing and record count will be done
audit.timebucket.size=1
# Time in ms when the first audit record will be flushed to audit topic
audit.first.flush.duration=30000
#This parameter tell how frequently audit record will be flushed to audit topic( Time in ms) 
audit.auditdata.flush.frequency=30000




# Log4j Properties
# Root logger option

#log4j.rootLogger=INFO, file, stdout

# configuration to print into file
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#log4j.appender.file.File=logs.txt
#log4j.appender.file.MaxFileSize=12MB
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# configuration to print on console

#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n